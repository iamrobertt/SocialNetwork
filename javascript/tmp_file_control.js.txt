/**Url base che servirà sia per loggare che per registrare */
let url = "https://necular.altervista.org/SocialNetwork/index.php";
let urlCheck = "https://necular.altervista.org/SocialNetwork/inc/checkData.php";
let message_reg1 = $('.message_reg1');
let message_reg2 = $('.message_reg2');
let message_reg3 = $('.message_reg3');
let message_success_reg = $('.message_success_reg');
let nomeFotoProfilo, fotoProfilo;

/**Funzione che prende 4 parametri (url, i dati in json da inviare, funzione nel caso vada a buon fine, funzione nel caso ci sia un errore) */
async function sendPostData(url, data, success, error){
    await $.ajax({
        type: "POST",
        url: url,
        data: data,
        success: success,
        error: error,
    });
}
async function sendPhotoData(url, data, success, error){
    await $.ajax({
        type: "POST",
        url: url,
        data: data,
        success: success,
        error: error,
        processData: false,
        contentType: false
    });
}

/**Funzione che prende il valore di tutti i campi nella prima parte della registrazione, li controlla per renderli validi e li invia tramite post al file php che li salverà come variabili di sessione */
async function sendRegister1(){
    let nomeRegistrazione = $('.nomeRegistrazione').eq(1).val();
    let cognomeRegistrazione = $('.cognomeRegistrazione').eq(1).val();
    let emailRegistrazione = $('.emailRegistrazione').eq(1).val();
    let passwordRegistrazione = $('.passwordRegistrazione').eq(1).val();
    let passwordRegistrazioneConferma = $('.passwordRegistrazioneConferma').eq(1).val();
    let esisteEmail;

    /**Se uno dei campi obbligatori è vuoto stampo l'errore */
    if(nomeRegistrazione == '' || cognomeRegistrazione == '' || emailRegistrazione == '' || passwordRegistrazione == '' || passwordRegistrazioneConferma == '') {
        message_reg1.css('display', 'block');
        message_reg1.html('Compila&nbsp;tutti&nbsp;i&nbsp;campi&nbsp;obbligatori&nbsp;(*).');
        return;
    }
    /**Se le password inserite non coincidono stampo l'errore */
    else if(passwordRegistrazione != passwordRegistrazioneConferma){
        message_reg1.css('display', 'block');
        message_reg1.html('Le&nbsp;password&nbsp;non&nbsp;coincidono.');
        return;
    }
    /**Se la password è minore di 8 caratteri o maggiore di 20 stampo l'errore */
    else if(passwordRegistrazione.length < 8 || passwordRegistrazione.length > 20){
        message_reg1.css('display', 'block');
        message_reg1.html('La&nbsp;password&nbsp;deve&nbsp;essere&nbsp;compresa&nbsp;tra&nbsp;8&nbsp;e&nbsp;20&nbsp;caratteri. (Attualmente ne stai usando ' + passwordRegistrazione.length + ').');
        return;
    }
    /**Se l'email inserita non contiene almeno una @ e un . vuoo dire che non è valida stampo l'errore */
    else if(!emailRegistrazione.includes("@") || !emailRegistrazione.includes(".")){
        message_reg1.css('display', 'block');
        message_reg1.html("L'indirizzo&nbsp;email&nbsp;inserito&nbsp;non&nbsp;è&nbsp;valido.");
        return;
    }
    await sendPostData(urlCheck, {emailRegistrazione: emailRegistrazione}, function(data) { data = JSON.parse(data); esisteEmail = data.esisteEmail;}, () => {alert("errore nella richiesta");})

    if(esisteEmail){
        message_reg1.css('display', 'block');
        message_reg1.html('E-mail&nbsp;già&nbsp;esistente.');
        return;
    }
    /*nascondo il messaggio di errore*/
    message_reg1.css('display', 'none');
    
    let dataReg1 = {
        nomeRegistrazione: nomeRegistrazione,
        cognomeRegistrazione: cognomeRegistrazione,
        emailRegistrazione: emailRegistrazione,
        passwordRegistrazione: passwordRegistrazione,
    };
    
    /**Mando i dati al server */
    await sendPostData(url, dataReg1, () => {$(".register1Box").hide(1000, function () { $(".register2Box").show(1000); });}, () => {alert("errore nella richiesta");});
}


/**Funzione che prende il valore di tutti i campi nella seconda parte della registrazione, li controlla per renderli validi e li invia tramite post al file php che li salverà come variabili di sessione */
async function sendRegister2(){
    
    let telefonoRegistrazione = $('.telefonoRegistrazione').eq(1).val();
    let annoRegistrazione = $('.annoRegistrazione').val();
    let meseRegistrazione = $('.meseRegistrazione').val();
    let giornoRegistrazione = $('.giornoRegistrazione').val();
    let genereRegistrazione = $('.genereRegistrazione').val();
    let esisteTelefono;

    /**Se uno dei campi obbligatori è vuoto stampo l'errore */
    if(annoRegistrazione == null || meseRegistrazione == null || giornoRegistrazione == null || genereRegistrazione == null) {
        message_reg2.css('display', 'block');
        message_reg2.html('Compila&nbsp;tutti&nbsp;i&nbsp;campi&nbsp;obbligatori&nbsp;(*).');
        return;
    }
    else if($('.telefonoRegistrazione').eq(1).val().length != 0 && $('.telefonoRegistrazione').eq(1).val().length != 10){
        message_reg2.css('display', 'block');
        message_reg2.html('Il&nbsp;numero&nbsp;di&nbsp;telefono&nbsp;inserito&nbsp;non&nbsp;è&nbsp;valido.');
        return;
    }
    await sendPostData(urlCheck, {telefonoRegistrazione: telefonoRegistrazione}, function(data) { data = JSON.parse(data); esisteTelefono = data.esisteTelefono;}, () => {alert("errore nella richiesta");})
    
    if(esisteTelefono) {
        message_reg2.css('display', 'block');
        message_reg2.html('Telefono&nbsp;già&nbsp;esistente.');
        return;
    }

    try{
        parseInt(telefonoRegistrazione);
    }
    catch(e){
        message_reg2.css('display', 'block');
        message_reg2.html('Il&nbsp;numero&nbsp;di&nbsp;telefono&nbsp;inserito&nbsp;non&nbsp;è&nbsp;valido.');
        return;
    }
    
    /*nascondo il messaggio di errore*/
    message_reg2.css('display', 'none');

    /**Creo la data dall'unione dei 3 parametri nel formato giusto per sql */
    let dataRegistrazione = annoRegistrazione + '/' + meseRegistrazione + '/' + giornoRegistrazione;

    let dataReg2 = {
        telefonoRegistrazione: telefonoRegistrazione,
        dataRegistrazione: dataRegistrazione,
        genereRegistrazione: genereRegistrazione
    };
    
    /**Mando i dati al server */
    await sendPostData(url, dataReg2, () => {$(".register2Box").hide(1000, function () { $(".register3Box").show(1000); });}, () => {alert("errore nella richiesta");});
}

/**Funzione che prende il valore di tutti i campi nella terza parte della registrazione, li controlla per renderli validi e li invia tramite post al file php che li salverà come variabili di sessione */
async function sendRegister3() {

    let usernameProfilo = $('.usernameProfilo').val();
    let biografiaProfilo = $('.biografiaProfilo').val();
    // let pathFotoProfilo = "https://necular.altervista.org/SocialNetwork/profileImages";
    let esisteUsername;

    /**Se uno dei campi obbligatori è vuoto stampo l'errore */
    if(usernameProfilo == ''){
        message_reg3.css('display', 'block');
        message_reg3.html('Compila&nbsp;tutti&nbsp;i&nbsp;campi&nbsp;obbligatori&nbsp;(*).');
        return;
    }

    await sendPostData(urlCheck, {usernameProfilo: usernameProfilo}, function(data) { data = JSON.parse(data); esisteUsername = data.esisteUsername;}, () => {alert("errore nella richiesta");})
    /*nascondo il messaggio di errore*/
    if(esisteUsername){
        message_reg3.css('display', 'block');
        message_reg3.html('Username&nbsp;già&nbsp;esistente.');
        return;
    }

    if(nomeFotoProfilo == '') nomeFotoProfilo = "default_user_icon.png";

    message_reg3.css('display', 'none');

    let dataReg3 = {
        usernameProfilo: usernameProfilo,
        biografiaProfilo: biografiaProfilo,
        nomeFotoProfilo: nomeFotoProfilo,
    };

    let fd = new FormData();

    fd.append('fotoProfilo', fotoProfilo);

    await sendPhotoData(url, fd, () => {}, () => {alert("errore nella richiesta");});
    
    /**Mando i dati al server */
    await sendPostData(url, dataReg3,() =>{ $(".register3Box").hide(1000, function () { $(".loginBox").show(1000); });
                                                message_success_reg.css('display','block')
                                                .html("Registrazione&nbsp;completata&nbsp;con&nbsp;successo.<br>Fai&nbsp;il&nbsp;login&nbsp;ed&nbsp;inizia&nbsp;ad&nbsp;usare&nbsp;la&nbsp;nostra&nbsp;app!");
                                                }, () => {alert("errore nella richiesta");});
}


let $getFotoProfilo = null;
const $fileInput = $('<input>', {
    appendTo: 'body',
    accept: 'image/*',
    type: 'file',
    hidden: true,
    on: {
        change: function(e) {
        const F = e.target.files;
        if (!F || !F[0]) return;
        if (!(/^image\/(jpe?g|png)$/).test(F[0].type)) return message_reg3.css('display', 'block').html('Il&nbsp;file&nbsp;selezionato&nbsp;non&nbsp;è&nbsp;una&nbsp;foto.'); 
        $getFotoProfilo.one('load', e => URL.revokeObjectURL(e.target.src)).css({"width": '3.5em', "height": '3.5em', "border-radius": '50%', "object-fit": 'cover'}).prop('src', URL.createObjectURL(F[0]));
        fotoProfilo = F[0];
        nomeFotoProfilo = F[0].name;
        }
    }
});

$('.fotoProfilo').eq(0).on('click', function() {
    $getFotoProfilo = $(this);
    $fileInput.click();
});
